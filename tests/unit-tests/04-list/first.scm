(include "#.scm")

(define bool #f)

(define z0  (list))
(define z1  (list 100))
(define z2  (list 100 101))
(define z3  (list 100 101 102))
(define z4  (list 100 101 102 103))
(define z5  (list 100 101 102 103 104))
(define z6  (list 100 101 102 103 104 105))
(define z7  (list 100 101 102 103 104 105 106))
(define z8  (list 100 101 102 103 104 105 106 107))
(define z9  (list 100 101 102 103 104 105 106 107 108))
(define z10 (list 100 101 102 103 104 105 106 107 108 109))

(check-tail-exn type-exception? (lambda () (first z0)))
(check-equal? (first z1) 100 )
(check-equal? (first z2) 100 )
(check-equal? (first z3) 100 )
(check-equal? (first z4) 100 )
(check-equal? (first z5) 100 )
(check-equal? (first z6) 100 )
(check-equal? (first z7) 100 )
(check-equal? (first z8) 100 )
(check-equal? (first z9) 100 )
(check-equal? (first z10) 100 )
(check-tail-exn type-exception? (lambda () (first bool)))
(check-tail-exn wrong-number-of-arguments-exception? (lambda () (first)))
(check-tail-exn wrong-number-of-arguments-exception? (lambda () (first z10 z10)))
